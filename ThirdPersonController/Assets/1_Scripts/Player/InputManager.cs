using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

/// <summary>
/// a Class that processes the inputs
/// </summary>
public class InputManager : MonoBehaviour
{
    PlayerControls playerControls;      // the script generated by Input Action Asset
    PlayerLocomotion playerLocomotion;  // Referencing PlayerLocomotion on Player
    AnimatorManager animatorManager;    // Referencing AnimatorManager on Player

    public Vector2 movementInput;       // a variable to hold the movement input
    public float horizontalInput;       // holding the horizontal input only from "movementInput"
    public float verticalInput;         // holding the vertical input only from "movementInput"
    public float moveAmount;            // holding how much the stick is moved
                                        // for now, Strafing won't work since Animator can take only values between 0 and 1, where Player can go forwards only
    public Vector2 cameraInput;         // a variable to hold the camera movement input
    public float horizontalCameraInput;
    public float verticalCameraInput;

    public bool leftStickButtonInput; // the button for sprinting : b_Input

    private void Awake()
    {
        animatorManager = GetComponent<AnimatorManager>();  // Referencing AnimatorManager on Player
        playerLocomotion = GetComponent<PlayerLocomotion>();    // Referencing PlayerLocomotion on Player
    }

    // Called when the gameobject is enabled
    // Turn on PlayerControls
    private void OnEnable()
    {
        if(playerControls == null)
        {
            // Fill up PlayerControls variable
            playerControls = new PlayerControls();

            // Record the values of the movement/camera movement when the inputs are executed
            // when "Movement"/"Camera" in Input Actions has been performed, the lambda expression is called
            playerControls.PlayerMovement.Movement.performed += i => movementInput = i.ReadValue<Vector2>();
            playerControls.PlayerMovement.Camera.performed += i => cameraInput = i.ReadValue<Vector2>();

            // TODO : change this into toggling instead of holding
            playerControls.PlayerActions.LeftStickButton.performed += i => leftStickButtonInput = true;
            playerControls.PlayerActions.LeftStickButton.canceled += i => leftStickButtonInput = false;
        }

        playerControls.Enable();
    }

    // Called when the gameobject is enabled
    // Turn off PlayerControls
    private void OnDisable()
    {
        playerControls.Disable();
    }


    // A function to encapsulate all functions related with Player input 
    public void HandleAllInputs()
    {
        HandleMovementInput();
        HandleSprintingInput();
        // HandleJumpInput();
        // HandleActionInput();
    }

    private void HandleMovementInput()
    {
        // Split the movement input by x/y axis
        horizontalInput = movementInput.x;
        verticalInput = movementInput.y;

        // Split the camera movement input by x/y axis
        horizontalCameraInput = cameraInput.x;
        verticalCameraInput = cameraInput.y;

        // Clamp the input values between 0 and 1 by only using their absolute values
        // since the parameters in Animator can only accept values between 0 and 1
        moveAmount = Mathf.Clamp01(Mathf.Abs(horizontalInput) + Mathf.Abs(verticalInput));

        // Send the inputs to the parameters in Animator
        animatorManager.UpdateAnimatorValues(0, moveAmount, playerLocomotion.isSprinting);
    }

    private void HandleSprintingInput()
    {
        // Flag for sprinting is on when Leftstick button is pressed and the stick gets tilted enough
        if(leftStickButtonInput && moveAmount > 0.5f)   // it prevents sprinting while walking or running
        {
            playerLocomotion.isSprinting = true;
        }
        else
        {
            playerLocomotion.isSprinting = false;
        }
    }
}
